// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/admin.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981
#region Designer generated code

using grpc = global::Grpc.Core;

namespace AdminServer {
  /// <summary>
  /// The admin service definition.
  /// </summary>
  public static partial class Admin
  {
    static readonly string __ServiceName = "admin.Admin";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::AdminServer.UserDTO> __Marshaller_admin_UserDTO = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AdminServer.UserDTO.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::AdminServer.MessageReply> __Marshaller_admin_MessageReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AdminServer.MessageReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::AdminServer.UserPatchDTO> __Marshaller_admin_UserPatchDTO = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AdminServer.UserPatchDTO.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::AdminServer.Empty> __Marshaller_admin_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AdminServer.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::AdminServer.UserList> __Marshaller_admin_UserList = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AdminServer.UserList.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::AdminServer.PerfilDTO> __Marshaller_admin_PerfilDTO = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AdminServer.PerfilDTO.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::AdminServer.PerfilList> __Marshaller_admin_PerfilList = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::AdminServer.PerfilList.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::AdminServer.UserDTO, global::AdminServer.MessageReply> __Method_PostUser = new grpc::Method<global::AdminServer.UserDTO, global::AdminServer.MessageReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PostUser",
        __Marshaller_admin_UserDTO,
        __Marshaller_admin_MessageReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::AdminServer.UserPatchDTO, global::AdminServer.MessageReply> __Method_PatchUser = new grpc::Method<global::AdminServer.UserPatchDTO, global::AdminServer.MessageReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PatchUser",
        __Marshaller_admin_UserPatchDTO,
        __Marshaller_admin_MessageReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::AdminServer.MessageReply, global::AdminServer.MessageReply> __Method_DeleteUser = new grpc::Method<global::AdminServer.MessageReply, global::AdminServer.MessageReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteUser",
        __Marshaller_admin_MessageReply,
        __Marshaller_admin_MessageReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::AdminServer.Empty, global::AdminServer.UserList> __Method_GetUsers = new grpc::Method<global::AdminServer.Empty, global::AdminServer.UserList>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUsers",
        __Marshaller_admin_Empty,
        __Marshaller_admin_UserList);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::AdminServer.PerfilDTO, global::AdminServer.MessageReply> __Method_PostPerfil = new grpc::Method<global::AdminServer.PerfilDTO, global::AdminServer.MessageReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PostPerfil",
        __Marshaller_admin_PerfilDTO,
        __Marshaller_admin_MessageReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::AdminServer.PerfilDTO, global::AdminServer.MessageReply> __Method_PatchPerfil = new grpc::Method<global::AdminServer.PerfilDTO, global::AdminServer.MessageReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PatchPerfil",
        __Marshaller_admin_PerfilDTO,
        __Marshaller_admin_MessageReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::AdminServer.MessageReply, global::AdminServer.MessageReply> __Method_DeletePerfil = new grpc::Method<global::AdminServer.MessageReply, global::AdminServer.MessageReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeletePerfil",
        __Marshaller_admin_MessageReply,
        __Marshaller_admin_MessageReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::AdminServer.Empty, global::AdminServer.PerfilList> __Method_GetPerfiles = new grpc::Method<global::AdminServer.Empty, global::AdminServer.PerfilList>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPerfiles",
        __Marshaller_admin_Empty,
        __Marshaller_admin_PerfilList);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::AdminServer.MessageReply, global::AdminServer.MessageReply> __Method_DeletePicture = new grpc::Method<global::AdminServer.MessageReply, global::AdminServer.MessageReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeletePicture",
        __Marshaller_admin_MessageReply,
        __Marshaller_admin_MessageReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::AdminServer.AdminReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Admin</summary>
    [grpc::BindServiceMethod(typeof(Admin), "BindService")]
    public abstract partial class AdminBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::AdminServer.MessageReply> PostUser(global::AdminServer.UserDTO request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::AdminServer.MessageReply> PatchUser(global::AdminServer.UserPatchDTO request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::AdminServer.MessageReply> DeleteUser(global::AdminServer.MessageReply request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::AdminServer.UserList> GetUsers(global::AdminServer.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::AdminServer.MessageReply> PostPerfil(global::AdminServer.PerfilDTO request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::AdminServer.MessageReply> PatchPerfil(global::AdminServer.PerfilDTO request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::AdminServer.MessageReply> DeletePerfil(global::AdminServer.MessageReply request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::AdminServer.PerfilList> GetPerfiles(global::AdminServer.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::AdminServer.MessageReply> DeletePicture(global::AdminServer.MessageReply request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Admin</summary>
    public partial class AdminClient : grpc::ClientBase<AdminClient>
    {
      /// <summary>Creates a new client for Admin</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public AdminClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Admin that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public AdminClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected AdminClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected AdminClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::AdminServer.MessageReply PostUser(global::AdminServer.UserDTO request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PostUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::AdminServer.MessageReply PostUser(global::AdminServer.UserDTO request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PostUser, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::AdminServer.MessageReply> PostUserAsync(global::AdminServer.UserDTO request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PostUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::AdminServer.MessageReply> PostUserAsync(global::AdminServer.UserDTO request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PostUser, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::AdminServer.MessageReply PatchUser(global::AdminServer.UserPatchDTO request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PatchUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::AdminServer.MessageReply PatchUser(global::AdminServer.UserPatchDTO request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PatchUser, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::AdminServer.MessageReply> PatchUserAsync(global::AdminServer.UserPatchDTO request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PatchUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::AdminServer.MessageReply> PatchUserAsync(global::AdminServer.UserPatchDTO request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PatchUser, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::AdminServer.MessageReply DeleteUser(global::AdminServer.MessageReply request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::AdminServer.MessageReply DeleteUser(global::AdminServer.MessageReply request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteUser, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::AdminServer.MessageReply> DeleteUserAsync(global::AdminServer.MessageReply request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::AdminServer.MessageReply> DeleteUserAsync(global::AdminServer.MessageReply request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteUser, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::AdminServer.UserList GetUsers(global::AdminServer.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUsers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::AdminServer.UserList GetUsers(global::AdminServer.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetUsers, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::AdminServer.UserList> GetUsersAsync(global::AdminServer.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUsersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::AdminServer.UserList> GetUsersAsync(global::AdminServer.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetUsers, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::AdminServer.MessageReply PostPerfil(global::AdminServer.PerfilDTO request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PostPerfil(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::AdminServer.MessageReply PostPerfil(global::AdminServer.PerfilDTO request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PostPerfil, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::AdminServer.MessageReply> PostPerfilAsync(global::AdminServer.PerfilDTO request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PostPerfilAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::AdminServer.MessageReply> PostPerfilAsync(global::AdminServer.PerfilDTO request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PostPerfil, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::AdminServer.MessageReply PatchPerfil(global::AdminServer.PerfilDTO request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PatchPerfil(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::AdminServer.MessageReply PatchPerfil(global::AdminServer.PerfilDTO request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PatchPerfil, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::AdminServer.MessageReply> PatchPerfilAsync(global::AdminServer.PerfilDTO request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PatchPerfilAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::AdminServer.MessageReply> PatchPerfilAsync(global::AdminServer.PerfilDTO request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PatchPerfil, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::AdminServer.MessageReply DeletePerfil(global::AdminServer.MessageReply request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeletePerfil(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::AdminServer.MessageReply DeletePerfil(global::AdminServer.MessageReply request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeletePerfil, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::AdminServer.MessageReply> DeletePerfilAsync(global::AdminServer.MessageReply request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeletePerfilAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::AdminServer.MessageReply> DeletePerfilAsync(global::AdminServer.MessageReply request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeletePerfil, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::AdminServer.PerfilList GetPerfiles(global::AdminServer.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPerfiles(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::AdminServer.PerfilList GetPerfiles(global::AdminServer.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPerfiles, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::AdminServer.PerfilList> GetPerfilesAsync(global::AdminServer.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPerfilesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::AdminServer.PerfilList> GetPerfilesAsync(global::AdminServer.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPerfiles, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::AdminServer.MessageReply DeletePicture(global::AdminServer.MessageReply request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeletePicture(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::AdminServer.MessageReply DeletePicture(global::AdminServer.MessageReply request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeletePicture, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::AdminServer.MessageReply> DeletePictureAsync(global::AdminServer.MessageReply request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeletePictureAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::AdminServer.MessageReply> DeletePictureAsync(global::AdminServer.MessageReply request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeletePicture, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override AdminClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new AdminClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(AdminBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_PostUser, serviceImpl.PostUser)
          .AddMethod(__Method_PatchUser, serviceImpl.PatchUser)
          .AddMethod(__Method_DeleteUser, serviceImpl.DeleteUser)
          .AddMethod(__Method_GetUsers, serviceImpl.GetUsers)
          .AddMethod(__Method_PostPerfil, serviceImpl.PostPerfil)
          .AddMethod(__Method_PatchPerfil, serviceImpl.PatchPerfil)
          .AddMethod(__Method_DeletePerfil, serviceImpl.DeletePerfil)
          .AddMethod(__Method_GetPerfiles, serviceImpl.GetPerfiles)
          .AddMethod(__Method_DeletePicture, serviceImpl.DeletePicture).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, AdminBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_PostUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AdminServer.UserDTO, global::AdminServer.MessageReply>(serviceImpl.PostUser));
      serviceBinder.AddMethod(__Method_PatchUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AdminServer.UserPatchDTO, global::AdminServer.MessageReply>(serviceImpl.PatchUser));
      serviceBinder.AddMethod(__Method_DeleteUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AdminServer.MessageReply, global::AdminServer.MessageReply>(serviceImpl.DeleteUser));
      serviceBinder.AddMethod(__Method_GetUsers, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AdminServer.Empty, global::AdminServer.UserList>(serviceImpl.GetUsers));
      serviceBinder.AddMethod(__Method_PostPerfil, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AdminServer.PerfilDTO, global::AdminServer.MessageReply>(serviceImpl.PostPerfil));
      serviceBinder.AddMethod(__Method_PatchPerfil, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AdminServer.PerfilDTO, global::AdminServer.MessageReply>(serviceImpl.PatchPerfil));
      serviceBinder.AddMethod(__Method_DeletePerfil, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AdminServer.MessageReply, global::AdminServer.MessageReply>(serviceImpl.DeletePerfil));
      serviceBinder.AddMethod(__Method_GetPerfiles, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AdminServer.Empty, global::AdminServer.PerfilList>(serviceImpl.GetPerfiles));
      serviceBinder.AddMethod(__Method_DeletePicture, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::AdminServer.MessageReply, global::AdminServer.MessageReply>(serviceImpl.DeletePicture));
    }

  }
}
#endregion
